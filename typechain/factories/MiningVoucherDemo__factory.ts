/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MiningVoucherDemo } from "../MiningVoucherDemo";

export class MiningVoucherDemo__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    voucherAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MiningVoucherDemo> {
    return super.deploy(
      voucherAddress_,
      overrides || {}
    ) as Promise<MiningVoucherDemo>;
  }
  getDeployTransaction(
    voucherAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(voucherAddress_, overrides || {});
  }
  attach(address: string): MiningVoucherDemo {
    return super.attach(address) as MiningVoucherDemo;
  }
  connect(signer: Signer): MiningVoucherDemo__factory {
    return super.connect(signer) as MiningVoucherDemo__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MiningVoucherDemo {
    return new Contract(address, _abi, signerOrProvider) as MiningVoucherDemo;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "voucherAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mining",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "miningUnits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unitDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voucherAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052601260015534801561001557600080fd5b506040516104393803806104398339818101604052602081101561003857600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790556103cf8061006a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806305271a2a1461005c5780630636110314610076578063100575b21461009c578063379607f5146100c0578063662fac39146100df575b600080fd5b6100646100e7565b60408051918252519081900360200190f35b6100646004803603602081101561008c57600080fd5b50356001600160a01b03166100ed565b6100a46100ff565b604080516001600160a01b039092168252519081900360200190f35b6100dd600480360360208110156100d657600080fd5b503561010e565b005b6100dd610378565b60015481565b60026020526000908152604090205481565b6000546001600160a01b031681565b336000908152600260205260409020548181101561016a576040805162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b604482015290519081900360640190fd5b33600090815260026020526040808220805485900390558051600180825281830190925262278d0092918160200160208202803683370190505090508167ffffffffffffffff164201816000815181106101c057fe5b67ffffffffffffffff92909216602092830291909101909101526040805160018082528183019092526000918160200160208202803683370190505090506127108160008151811061020e57fe5b602002602001019063ffffffff16908163ffffffff168152505060008054906101000a90046001600160a01b03166001600160a01b0316632ea71588848685856040518563ffffffff1660e01b8152600401808567ffffffffffffffff168152602001848152602001806020018060200180602001848103845286818151815260200191508051906020019060200280838360005b838110156102bb5781810151838201526020016102a3565b50505050905001848103835285818151815260200191508051906020019060200280838360005b838110156102fa5781810151838201526020016102e2565b505050509050018481038252600b8152602001806a4d696e696e672044454d4f60a81b8152506020019750505050505050506040805180830381600087803b15801561034557600080fd5b505af1158015610359573d6000803e3d6000fd5b505050506040513d604081101561036f57600080fd5b50505050505050565b60015433600090815260026020526040902080546104ce909218909101905556fea264697066735822122019e1ff1ca18cb0ee72b3cee1974c039f32414b18812daf7d0588544955fdf85464736f6c63430007060033";
